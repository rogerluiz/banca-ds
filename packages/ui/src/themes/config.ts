import { createStitches } from '@stitches/react';
import type { ScaleValue, PropertyValue } from '@stitches/react';

export const {
  styled,
  css,
  globalCss,
  keyframes,
  getCssText,
  theme,
  createTheme,
  config,
} = createStitches({
  theme: {
    colors: {
      hiContrast: 'hsl(206,10%,5%)',
      loContrast: 'white',
      black: '#000000',

      blue1: '#03045e',
      blue2: '#0077b6',
      blue3: '#00b4d8',
      blue4: '#90e0ef',
      blue5: '#caf0f8',

      yellow1: '#F7DC6F',
      yellow2: '#edc531',
      yellow3: '#c9a227',
      yellow4: '#a47e1b',
      yellow5: '#583E0B',

      grayDark1: '#A6A6A6',
      grayDark2: '#737373',
      grayDark3: '#4D4D4D',
      grayDark4: '#262626',
      grayDark5: '#000000',

      grayLight1: '#C2C2C2',
      grayLight2: '#D6D6D6',
      grayLight3: '#EBEBEB',
      grayLight4: '#F5F5F5',
      grayLight5: '#FFFFFF',

      success1: '#48E68B',
      success2: '#27AE60',
      success3: '#1E8449',
      success4: '#186A3B',
      success5: '#072211',

      warning1: '#FFA500',
      warning2: '#FFC107',
      warning3: '#F39C12',
      warning4: '#D35400',
      warning5: '#E74C3C',

      info1: '#3498DB',
      info2: '#2980B9',
      info3: '#2C3E50',
      info4: '#1F3A93',
      info5: '#154360',

      danger1: '#E74C3C',
      danger2: '#C0392B',
      danger3: '#922B21',
      danger4: '#641E16',
      danger5: '#B03A2E',
    },
    space: {
      // 1: '4px',
      // 2: '8px',
      // 3: '12px',
      // 4: '16px',
      // 5: '24px',
      // 6: '32px',
      // 7: '64px',
      // 8: '128px',
      // 9: '256px',
      4: '4px',
      8: '8px',
      12: '12px',
      16: '16px',
      24: '24px',
      32: '32px',
      64: '64px',
      128: '128px',
      256: '256px',
    },
    fontSizes: {
      10: '10px',
      11: '11px',
      12: '12px',
      13: '13px',
      14: '14px',
      15: '15px',
      16: '16px',
      20: '20px',
      24: '24px',
      32: '32px',
      36: '36px',
      40: '40px',
      48: '48px',
    },
    fonts: {
      roboto: 'Roboto, Helvetica, Arial, sans-serif',
    },
    fontWeights: {
      thin: 100,
      light: 300,
      regular: 400,
      medium: 500,
      bold: 700,
    },
    lineHeights: {},
    letterSpacings: {},
    sizes: {
      4: '4px',
      8: '8px',
      12: '12px',
      16: '16px',
      24: '24px',
      32: '32px',
      64: '64px',
      128: '128px',
      256: '256px',
    },
    borderWidths: {},
    borderStyles: {},
    radii: {
      xs: '4px',
      sm: '8px',
      md: '12px',
      lg: '16px',
      xl: '28px',
      round: '50%',
      circular: '100%',
    },
    shadows: {},
    zIndices: {
      1: '100',
      2: '200',
      3: '300',
      4: '400',
      5: '500',
      6: '600',
      7: '700',
      8: '800',
      9: '900',
      max: '999',
    },
    transitions: {},
  },
  media: {
    bp1: '(min-width: 520px)',
    bp2: '(min-width: 900px)',
    bp3: '(min-width: 1200px)',
    bp4: '(min-width: 1800px)',

    xs: 'screen and (min-width: 0px)',
    sm: 'screen and (min-width: 576px)',
    md: 'screen and (min-width: 768px)',
    lg: 'screen and (min-width: 992px)',
    xl: 'screen and (min-width: 1200px)',

    motion: '(prefers-reduced-motion)',
    dark: '(prefers-color-scheme: dark)',
    light: '(prefers-color-scheme: light)',
  },
  utils: {
    px: (value: ScaleValue<'space'> | PropertyValue<'padding'>) => ({
      paddingLeft: value,
      paddingRight: value,
    }),
    py: (value: ScaleValue<'space'> | PropertyValue<'padding'>) => ({
      paddingTop: value,
      paddingBottom: value,
    }),
    mx: (value: ScaleValue<'space'> | PropertyValue<'margin'>) => ({
      marginLeft: value,
      marginRight: value,
    }),
    my: (value: ScaleValue<'space'> | PropertyValue<'margin'>) => ({
      marginTop: value,
      marginBottom: value,
    }),
    size: (value: PropertyValue<'width'> | ScaleValue<'sizes'>) => ({
      width: value,
      height: value,
    }),
    gridSize: (value: ScaleValue<'sizes'>) => ({
      flexBasis: value,
      maxWidth: value,
    }),
  },
});
